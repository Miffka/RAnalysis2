facet_grid(university ~ year)
ggplot(universities, aes(x = excellent_students))+
geom_bar()+
facet_grid(year ~ university)
ggplot(universities, aes(x = excellent_students))+
geom_hist()+
facet_grid(year ~ university)
ggplot(universities, aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
ggplot(universities[universities$year == c(2013, 2014, 2015)], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
universities[universities$year == c(2013, 2014, 2015)]
universities$year == c(2013, 2014, 2015)
universities[universities$year == c(2013, 2014, 2015),]
ggplot(universities[universities$year == c(2013, 2014, 2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
ggplot(universities[universities$year == c(2013, 2014, 2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
ggplot(universities[universities$year == c(2013:2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
universities <- read.csv('https://stepik.org/media/attachments/lesson/31919/universities.csv')
ggplot(universities[universities$year == c(2013:2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
uni <- universities[universities$year == c(2013:2015)]
uni <- universities[universities$year == c(2013:2015),]
View(uni)
ggplot(universities[universities$year == c(2013:2015),], aes(x = excellent_students))+
geom_col()+
facet_grid(year ~ university)
ggplot(universities[universities$year == c(2013:2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
ggplot(universities[universities$year == c(2013:2015),], aes(x = excellent_students))+
geom_histogram(binwidth = 30)+
facet_grid(year ~ university)
ggplot(universities[universities$year == c(2013:2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
View(universities)
ggplot(universities[universities, aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
ggplot(universities, aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
ggplot(universities[universities$year == c(2013:2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
ggplot(universities, aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
ggplot(universities[universities$year == c(2013:2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
ggplot(universities, aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
universities %>%
group_by(year) %>%
summarise(n())
universities %>%
group_by(year)
ggplot(universities[universities$year in c(2013:2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
ggplot(universities[universities$year %in% c(2013:2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
company <- read.csv('https://stepik.org/media/attachments/lesson/31919/company.csv')
ggplot(company, aes(y = income, group = department))+
geom_violin()
ggplot(company, aes(y = income, x = department))+
geom_violin()
ggplot(company, aes(y = income, x = department))+
geom_violin()+
geom_boxplot()
ggplot(company, aes(y = income, x = department))+
geom_violin()+
geom_boxplot(width = 0.5)
ggplot(company, aes(y = income, x = department))+
geom_violin()+
geom_boxplot(width = 0.5)+
xlab(label = "Филиал")
ggplot(company, aes(y = income, x = department))+
geom_violin()+
geom_boxplot(width = 0.5)+
xlab(label = "Филиал")+
scale_x_discrete(labels = c("Филиал №1", "Филиал №2", "Филиал №3", "Филиал №4"))
ggplot(company, aes(y = income, x = department))+
geom_violin()+
geom_boxplot(width = 0.5)+
xlab(label = "Филиал")+
ylab(label = "Прибыль")+
scale_x_discrete(labels = c("Филиал №1", "Филиал №2", "Филиал №3", "Филиал №4"))
ggplot(company, aes(y = income, x = department))+
geom_violin()+
geom_boxplot(width = 0.5)+
ylab(label = "Прибыль")+
scale_x_discrete(name = "Филиалы",labels = c("Филиал №1", "Филиал №2", "Филиал №3", "Филиал №4"))
ggplot(company, aes(y = income, x = department))+
geom_violin()+
geom_boxplot(width = 0.5)+
scale_x_discrete(name = "Филиалы",labels = c("Филиал №1", "Филиал №2", "Филиал №3", "Филиал №4"))+
scale_y_continuous(name = "Прибыль", limits = c(1300,1700))
?seq
ggplot(company, aes(y = income, x = department))+
geom_violin()+
geom_boxplot(width = 0.5)+
scale_x_discrete(name = "Филиалы",labels = c("Филиал №1", "Филиал №2", "Филиал №3", "Филиал №4"))+
scale_y_continuous(name = "Прибыль", limits = c(1300,1700), breaks = seq(1300, 1700, len = 50))
?seq
ggplot(company, aes(y = income, x = department))+
geom_violin()+
geom_boxplot(width = 0.5)+
scale_x_discrete(name = "Филиалы",labels = c("Филиал №1", "Филиал №2", "Филиал №3", "Филиал №4"))+
scale_y_continuous(name = "Прибыль", limits = c(1300,1700), breaks = seq(1300, 1700, 50))
df <- read.csv("https://stepik.org/media/attachments/lesson/33861/nz_milk_sample.csv",
stringsAsFactors = TRUE)
t7 <- read.csv("https://stepik.org/media/attachments/lesson/33861/nz_milk_sample.csv",
stringsAsFactors = TRUE)
rm('df')
str(t7)
?gather
?spread
t7 <- as.data.frame(apply(t7, 2, function(x) {
x[which(is.na(x))] <- mean(x, na.rm = T)
return(c(x))
}))
str(t7)
t7 <- as.integer(t7)
t7 <- sapply(t7, as.integer)
View(t7)
t7 <- sapply(t7, as.string)
t7 <- read.csv("https://stepik.org/media/attachments/lesson/33861/nz_milk_sample.csv",
stringsAsFactors = TRUE)
t7 <- sapply(t7, as.string)
t7 <- sapply(t7, as.character)
View(t7)
t7 <- sapply(sapply(t7, as.character), as.integer)
t7
t7 <- read.csv("https://stepik.org/media/attachments/lesson/33861/nz_milk_sample.csv",
stringsAsFactors = TRUE)
t71 <- sapply(t7, as.character)
(t71 <- sapply(t7, as.character))
(t72 <- sapply(t7, function(x) {
if (!is.na(as.double(x))) {
return(as.double(x))
}
}))
rm('t72')
return(as.double(x))
t72 <- sapply(t7, function(x) {
sapply(x, function(x) {
if (!is.na(as.double(x))) {
return(as.double(x))
}
}))
t7 <- as.data.frame(apply(t7, 2, function(x) {
x[which(is.na(x))] <- mean(x, na.rm = T)
return(c(x))
}))
?gather
?spread
library(dplyr)
library(tidyr)
normalize_data <- function(df) {
df <- as.data.frame(apply(df, 2, function(x) {
x[which(is.na(x))] <- mean(x, na.rm = T)
return(c(x))
}))
}
#    Задача 8 - применить facet_grid
universities <- read.csv('https://stepik.org/media/attachments/lesson/31919/universities.csv')
ggplot(universities[universities$year %in% c(2013:2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
#    Задача 9 - строим красивые графики
company <- read.csv('https://stepik.org/media/attachments/lesson/31919/company.csv')
?seq
ggplot(company, aes(y = income, x = department))+
geom_violin()+
geom_boxplot(width = 0.5)+
scale_x_discrete(name = "Филиал",labels = c("Филиал №1", "Филиал №2", "Филиал №3", "Филиал №4"))+
scale_y_continuous(name = "Прибыль", limits = c(1300,1700), breaks = seq(1300, 1700, 50))
t7 <- read.csv("https://stepik.org/media/attachments/lesson/33861/nz_milk_sample.csv",
stringsAsFactors = TRUE)
str(t7)
(t71 <- sapply(t7, as.character))
t72 <- sapply(t71, function(x) {
sapply(x, function(x) {
if (!is.na(as.double(x))) {
return(as.double(x))
}
}))
t7 <- as.data.frame(apply(t7, 2, function(x) {
x[which(is.na(x))] <- mean(x, na.rm = T)
return(c(x))
}))
?gather
?spread
library(dplyr)
library(tidyr)
normalize_data <- function(df) {
df <- as.data.frame(apply(df, 2, function(x) {
x[which(is.na(x))] <- mean(x, na.rm = T)
return(c(x))
}))
}
#    Задача 8 - применить facet_grid
universities <- read.csv('https://stepik.org/media/attachments/lesson/31919/universities.csv')
ggplot(universities[universities$year %in% c(2013:2015),], aes(x = excellent_students))+
geom_histogram()+
facet_grid(year ~ university)
#    Задача 9 - строим красивые графики
company <- read.csv('https://stepik.org/media/attachments/lesson/31919/company.csv')
?seq
ggplot(company, aes(y = income, x = department))+
geom_violin()+
geom_boxplot(width = 0.5)+
scale_x_discrete(name = "Филиал",labels = c("Филиал №1", "Филиал №2", "Филиал №3", "Филиал №4"))+
scale_y_continuous(name = "Прибыль", limits = c(1300,1700), breaks = seq(1300, 1700, 50))
t72 <- sapply(t71, function(x) {
sapply(x, function(i) {
if (!is.na(as.double(i))) {
return(as.double(i))
}
})
})
View(t71)
t72 <- sapply(t71[,-1], function(x) {
sapply(x, function(i) {
if (!is.na(as.double(i))) {
return(as.double(i))
}
})
})
df <- data.frame(Name = c("John", "Peter", "Mary", "Caroline"),
DrugA_T1 = runif(4, 35, 36),
DrugA_T2 = runif(4, 36, 39),
DrugB_T1 = runif(4, 36, 36.6),
DrugB_T2 = runif(4, 37, 38.5)
); df
gather(df, Variable, Temperature, -Name)
rm('df')
rm('company')
rm('universities')
rm('normalize_data')
t71 <- as.data.frame(sapply(t7, as.character))
t72 <- as.data.frame(sapply(t71[,-1], function(x) {
sapply(x, function(i) {
if (!is.na(as.double(i))) {
return(as.double(i))
}
})
}))
View(t72)
View(t71)
View(t71)
t72 <- as.data.frame(sapply(t71[,-1], function(x) {
sapply(x, function(i) {
if (!is.na(as.integer(i))) {
return(as.integer(i))
}
})
}))
View(t72)
str(t7)
gather(df, Variable, Temperature, -Name)
df <- data.frame(Name = c("John", "Peter", "Mary", "Caroline"),
DrugA_T1 = runif(4, 35, 36),
DrugA_T2 = runif(4, 36, 39),
DrugB_T1 = runif(4, 36, 36.6),
DrugB_T2 = runif(4, 37, 38.5)
); df
gather(df, Variable, Temperature, -Name)
View(df)
t71 <- gather(t7, year, milksolids,-region)
View(t71)
rm(c('t72', 'df'))
rm(list('t72', 'df'))
rm('t72')
rm(df)
str(t71)
t71 <- gather(t7, year, milksolids,-region)
library(stringr)
sapply(t71[,2], str_replace(s, "X", ""))
sapply(t71[,2], function(x) {str_replace(x, "X", "")})
t71$year <- sapply(t71[,2], function(x) {str_replace(x, "X", "")})
t7mixed <- t7[sample(1:ncol(t7), size = ncol(t7), replace = FALSE)]
t71mixed <- gather(t7mixed, year, milksolids,-region)
View(t71)
View(t71mixed)
?mutate_each
?mutate_all
t71 %>%
filter(year, milksolids) %>%
mutate_all(funs(as.numeric))
t71 %>%
select(year, milksolids) %>%
mutate_all(funs(as.numeric))
t72 <-  t71 %>%
select(year, milksolids) %>%
mutate_all(funs(as.numeric))
t72 <-  t71 %>%
mutate(as.numeric(year),
as.numeric(milksolids))
t72 <-  t71 %>%
mutate(year = as.numeric(year),
milksolids = as.numeric(milksolids))
t72 <-  t71 %>%
mutate(year = ordered(as.numeric(year)),
milksolids = as.numeric(milksolids))
t72 %>%
group_by(year)
t72 %>%
group_by(year) %>%
mutate_all(funs(ifelse(is.na, mean(.))))
t72 %>%
group_by(year) %>%
mutate(milksolids = ifelse(is.na, mean(.)))
t72 %>%
group_by(year) %>%
mutate(milksolids = ifelse(is.na, mean(.), .))
?impute.mean
??impute.mean
??impute.mean
library(plyr)
library(plyr)
library(dplyr)
library(tidyr)
library(stringr)
??impute.mean
?imp.mean
??imp.mean
t72 %>%
group_by(year) %>%
mutate(milksolids = mean(.))
t72 %>%
group_by(year) %>%
mutate(milksolids = ifelse(is.na, mean(., na.rm = T), .))
t72 %>%
group_by(year) %>%
mutate_if(is.numeric, ifelse(is.na, mean(., na.rm = T), .))
?mutate_if
t72 %>%
group_by(year) %>%
mutate_if(is.numeric, funs(ifelse(is.na, mean(., na.rm = T), .)))
t72 %>%
group_by(year)
library(Hmisc)
?impute
t72 %>%
group_by(year) %>%
mutate_if(is.numeric, funs(impute(., fun = mean)))
t73 <- t72 %>%
group_by(year) %>%
mutate_if(is.numeric, funs(impute(., fun = mean)))
View(t73)
t73 <- as.data.frame(t72 %>%
group_by(year) %>%
mutate_if(is.numeric, funs(impute(., fun = mean))))
View(t73)
t73 <- as.data.frame(t71 %>%
mutate(year = ordered(as.numeric(year)),
milksolids = as.numeric(milksolids)) %>%
group_by(year) %>%
mutate_if(is.numeric, funs(impute(., fun = mean)))))
t73 <- as.data.frame(t71 %>%
mutate(year = ordered(as.numeric(year)),
milksolids = as.numeric(milksolids)) %>%
group_by(year) %>%
mutate_if(is.numeric, funs(impute(., fun = mean))))
t7 <- read.csv("https://stepik.org/media/attachments/lesson/33861/nz_milk_sample.csv",
stringsAsFactors = TRUE)
t7mixed <- t7[sample(1:ncol(t7), size = ncol(t7), replace = FALSE)]
normalize_data(t7)
normalize_data <- function(df) {
df <- gather(df, year, milksolids, -region)
df$year <- sapply(df[,2], function(x) {str_replace(x, "X", "")})
df <- as.data.frame(df %>%
mutate(year = ordered(as.numeric(year)),
milksolids = as.numeric(milksolids)) %>%
group_by(year) %>%
mutate_if(is.numeric, funs(impute(., fun = mean))))
retunr(df)
}
7
normalize_data(t7)
normalize_data <- function(df) {
df <- gather(df, year, milksolids, -region)
df$year <- sapply(df[,2], function(x) {str_replace(x, "X", "")})
df <- as.data.frame(df %>%
mutate(year = ordered(as.numeric(year)),
milksolids = as.numeric(milksolids)) %>%
group_by(year) %>%
mutate_if(is.numeric, funs(impute(., fun = mean))))
return(df)
}
normalize_data(t7)
normalize_data(t7mixed)
str(normalize_data(t7mixed))
t7n <- normalize_data(t7)
??importFrom
?trimws
t7 <- read.csv("https://stepik.org/media/attachments/lesson/33861/nz_milk_sample.csv",
stringsAsFactors = TRUE)
t71 <- gather(t7, year, milksolids,-region)
t71$year <- sapply(t71[,2], function(x) {str_replace(x, "X", "")})
t73 <- as.data.frame(t71 %>%
mutate(year = ordered(as.numeric(year)),
milksolids = as.numeric(milksolids)) %>%
group_by(year) %>%
mutate_if(is.numeric, funs(impute(., fun = mean))))
library(plyr)
library(dplyr)
library(tidyr)
library(stringr)
library(Hmisc)
normalize_data <- function(df) {
df <- gather(df, year, milksolids, -region)
df$year <- sapply(df[,2], function(x) {str_replace(x, "X", "")})
df <- as.data.frame(df %>%
mutate(year = ordered(as.numeric(year)),
milksolids = as.numeric(milksolids)) %>%
group_by(year) %>%
mutate_if(is.numeric, funs(impute(., fun = mean))))
return(df)
}
?arrange
t71 %>%
mutate(year = ordered(as.numeric(year)),
milksolids = as.numeric(milksolids)) %>%
arrange(year)
t71$year <- sapply(t71[,2], function(x) {str_replace(x, "X", "")})
t71 %>%
mutate(year = ordered(as.numeric(year)),
milksolids = as.numeric(milksolids)) %>%
arrange(year)
t71 <- gather(t7, year, milksolids,-region)
t71$year <- sapply(t71[,2], function(x) {str_replace(x, "X", "")})
t71 %>%
mutate(year = ordered(as.numeric(year)),
milksolids = as.numeric(milksolids)) %>%
arrange(year)
t7mixedn <- normalize_data(t7mixed)
t7mixed <- t7[sample(1:ncol(t7), size = ncol(t7), replace = FALSE)]
t7mixedn <- normalize_data(t7mixed)
all.equal(t7n, t7mixedn)
t7n <- normalize_data(t7)
all.equal(t7n, t7mixedn)
View(t7mixed)
View(t7mixedn)
View(t7n)
?arrange
load("~/SummerSchool'2017/Project/NCBIPathogens/NCBIPathog_workspase.RData")
rm('downloaded_fasta')
head(bigbase[bigbase$biosample_acc %in% downloaded_docs[,1]])
downloaded_docs[,1]
bigbase$biosample_acc
head(bigbase[bigbase$biosample_acc %in% downloaded_docs[,1]])
head(bigbase[bigbase$biosample_acc %in% downloaded_docs[,1],])
bigbase_fasta <- bigbase[bigbase$biosample_acc %in% downloaded_docs[,1],]
table(bigbase_fasta$taxgroup_name, bigbase_fasta$phenotype)
bigbase_mason <- bigbase[bigbase$biosample_acc %in% processed_mason_notall[,1],]
table(bigbase_mason$taxgroup_name, bigbase_mason$phenotype)
table(bigbase_mason$asm_level)
table(bigbase_mason$taxgroup_name, bigbase_mason$asm_level)
length(unique(bigbase_mason$biosample_acc))
length(bigbase_mason[unique(bigbase_mason$biosample_acc),])
unique(bigbase_mason$biosample_acc)
library(dplyr)
library(lazyeval)
bigbase_mason %>%
group_by(biosample_acc) %>%
slice(1) %>%
length()
bigbase_mason %>%
group_by(biosample_acc) %>%
slice(1)
bigbase_mason %>%
group_by(biosample_acc) %>%
slice(1) %>%
nrow()
bigbase_mason <- bigbase_mason %>%
group_by(biosample_acc) %>%
slice(1)
table(bigbase_mason$taxgroup_name, bigbase_mason$phenotype)
table(bigbase_mason$taxgroup_name, bigbase_mason$asm_level)
bigbase_mason <- bigbase_mason %>%
group_by(biosample_acc) %>%
slice(1) %>%
as.data.frame()
bigbase_mason %>%
group_by(taxgroup_name) %>%
order_by(asm_level) %>%
slice(1:5)
bigbase_mason %>%
group_by(taxgroup_name) %>%
order_by(asm_level)
bigbase_mason %>%
group_by(taxgroup_name)
bigbase_mason %>%
group_by(taxgroup_name) %>%
order_by(asm_level)
?order_by
save.image("~/SummerSchool'2017/Project/NCBIPathogens/NCBIPathog_workspase.RData")
